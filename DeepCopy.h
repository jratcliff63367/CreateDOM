#ifndef DEEPCOPY_H
#define DEEPCOPY_H

// CreateDOM: Schema Generation tool written by John W. Ratcliff, 2017
// Warning:This source file was auto-generated by the CreateDOM tool. Do not try to edit this source file manually!
// The Google DOCs Schema Spreadsheet for this source came from: https://docs.google.com/spreadsheets/d/118I5kdu2XT-6wfCG044937xfEKDyX2oNg04G8Wqi6o0/edit?usp=sharing

#include <stdint.h>


namespace DEEP_COPY
{

// Declare the clone-object class for deep copies
// of objects by the implementation classes
// Not to be used with the base DOM classes;
// they do not support deep copies
class CloneObject
{
public:
	virtual CloneObject *clone(void) const { return nullptr; };
};

enum GeometryType
{
	GT_BOX_GEOMETRY, 					// A basic sphere primitive
	GT_SPHERE_GEOMETRY,					// A plane 
};


// Base class for all geometries
class Geometry: public CloneObject
{
public:
	GeometryType type;   										// 
};


// Defines a box geometry
class BoxGeometry : public Geometry
{
public:
	// Declare the constructor.
	BoxGeometry()
	{
		Geometry::type = GT_BOX_GEOMETRY;
	}


	// Declare the virtual destructor.
	virtual ~BoxGeometry()
	{
	}

	float  		width{ 1 }; 										// 
	float  		depth{ 1 }; 										// 
	float  		height{ 1 };  										// Dimensions of the box
};


// Defines a sphere geometry
class SphereGeometry : public Geometry
{
public:
	// Declare the constructor.
	SphereGeometry()
	{
		Geometry::type = GT_SPHERE_GEOMETRY;
	}


	// Declare the virtual destructor.
	virtual ~SphereGeometry()
	{
	}

	float  		radius{ 1 };  										// The radius of the sphere
};


// Defines a single instance of a geometry
class GeometryInstance: public CloneObject
{
public:

	// Declare the constructor.
	GeometryInstance() { }


	// Declare the virtual destructor; cleanup any pointers or arrays of pointers
	virtual ~GeometryInstance()
	{
	}

	uint32_t 	geometriesCount { 0 };
	const Geometry* geometries;									// The geometry associated with this instance
};



} // End of DEEP_COPY namespace

#endif // End of Geometry

#ifndef DEEPCOPY_H
#define DEEPCOPY_H

// CreateDOM: Schema Generation tool written by John W. Ratcliff, 2017
// Warning:This source file was auto-generated by the CreateDOM tool. Do not try to edit this source file manually!
// The Google DOCs Schema Spreadsheet for this source came from: https://docs.google.com/spreadsheets/d/118I5kdu2XT-6wfCG044937xfEKDyX2oNg04G8Wqi6o0/edit?usp=sharing

#include <stdint.h>


namespace DEEP_COPY
{


// Defines a basic 3d vector type
class Vec3
{
public:
	// Declare the constructor.
	Vec3() { }

	// Declare the assignment constructor.
	Vec3(const float &_x,const float &_y,const float &_z)
	{
		x = _x;
		y = _y;
		z = _z;
	}

	float  		x{ 0 }; 											// x axis component of the vector
	float  		y{ 0 }; 											// y axis component of the vector
	float  		z{ 0 }; 											// z axis component of the vector
};


class TestVec3
{
public:
	const char * name{ nullptr };  								// 
	uint32_t 	pointsCount { 0 };
	Vec3*  		points{ nullptr };									// 
};


enum GeometryType
{
	GT_BOX_GEOMETRY, 					// A basic sphere primitive
	GT_SPHERE_GEOMETRY,					// A plane 
};


// Base class for all geometries
class Geometry
{
public:
	GeometryType type;   										// 
};


// Defines a box geometry
class BoxGeometry : public Geometry
{
public:
	// Declare the constructor.
	BoxGeometry()
	{
		Geometry::type = GT_BOX_GEOMETRY;
	}

	float  		width{ 1 }; 										// 
	float  		depth{ 1 }; 										// 
	float  		height{ 1 };  										// Dimensions of the box
};


// Defines a sphere geometry
class SphereGeometry : public Geometry
{
public:
	// Declare the constructor.
	SphereGeometry()
	{
		Geometry::type = GT_SPHERE_GEOMETRY;
	}

	float  		radius{ 1 };  										// The radius of the sphere
};


// Defines a single instance of a geometry
class GeometryInstance
{
public:
	TestVec3 	testVec3;											// 
	uint32_t 	geometriesCount { 0 };
	Geometry**   geometries{ nullptr };							// The geometry associated with this instance
};



} // End of DEEP_COPY namespace

#endif // End of Geometry
